#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass extarticle
\begin_preamble
\usepackage{indentfirst}
\end_preamble
\use_default_options true
\begin_modules
eqs-within-sections
figs-within-sections
theorems-ams-bytype
theorems-sec-bytype
algorithm2e
\end_modules
\maintain_unincluded_children false
\language russian
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement h
\paperfontsize 12
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 1.5cm
\rightmargin 2.5cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation 0.7cm
\quotes_language french
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\RR}{\mathbb{R}}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\ZZ}{\mathbb{Z}}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\NN}{\mathbb{N}}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\QQ}{\mathbb{Q}}
\end_inset


\end_layout

\begin_layout Standard

\series bold
Преподаватель:
\series default
 Матросов Александр Васильевич.
\end_layout

\begin_layout Standard
Касаемо практики: мы будем делать 2 программных проекта.
 Первый будет связан с реализацией конечного автомата для регулярного выражения.
 Второй проект будет связан с конечным автоматом с магазином, который использует
ся для создания контекстно-свободных языков программирования.
\end_layout

\begin_layout Standard

\series bold
Литература:
\series default
 Основная: Джон Хопкрофт, Мотвани, Ульман, 
\begin_inset Quotes fld
\end_inset

Введение в теорию автоматов и вычислений
\begin_inset Quotes frd
\end_inset

.
 Допы: Ахо 
\begin_inset Quotes fld
\end_inset

Компиляторы: принципы, технологии и инструменты
\begin_inset Quotes frd
\end_inset

; Карпов 
\begin_inset Quotes fld
\end_inset

Теория автоматов
\begin_inset Quotes frd
\end_inset

, 
\begin_inset Quotes fld
\end_inset

Основы построения трансляторов
\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Standard
Теория формальных языков изучает методы задания, распознавания и обработки
 языков.
\end_layout

\begin_layout Section
Детерминированный и недетерминированный конечный автомат
\end_layout

\begin_layout Definition
Словарь — конечное множество объектов.
\end_layout

\begin_deeper
\begin_layout Definition
Символ — элемент словаря.
\end_layout

\begin_deeper
\begin_layout Definition
Цепочка символов над словарем — конечная последовательность символов словаря.
\end_layout

\end_deeper
\end_deeper
\begin_layout Example
\begin_inset Formula $\alpha=aabb$
\end_inset

 — цепочка над словарём 
\begin_inset Formula $V=\{a,b\}$
\end_inset

.
\end_layout

\begin_layout Definition
\begin_inset Formula $V^{*}$
\end_inset

 — множество всевозможных цепочек, включая пустую.
\end_layout

\begin_deeper
\begin_layout Definition
\begin_inset Formula $a^{n}$
\end_inset

 — цепочка из 
\begin_inset Formula $n$
\end_inset

 символов.
\end_layout

\begin_deeper
\begin_layout Definition
Операция подстановки выполняет замену подцепочки заданной цепочки на другую
 цепочку.
\end_layout

\begin_deeper
\begin_layout Definition
Языком 
\begin_inset Formula $L$
\end_inset

 над словарем 
\begin_inset Formula $V$
\end_inset

 называется произвольное множество цепочек над этим словарем.
\end_layout

\end_deeper
\end_deeper
\end_deeper
\begin_layout Example
\begin_inset Formula $V=\{a,b\},\ L=\{a^{n}b^{n}|n\geq0\}$
\end_inset

.
\end_layout

\begin_layout Standard
Проблема задания бесконечного множества цепочек, составляющих нас язык.
 Необходим конечный механизм, который может описать бесконечное множество
 цепочек.
\end_layout

\begin_layout Definition
Любой конечный механизм задания языка называется грамматикой.
\end_layout

\begin_layout Standard
Существует два типа грамматик:
\end_layout

\begin_layout Enumerate
Порождающая: за конечное число шагов построить правильные цепочки языка.
 Удобна и естественна для задания спецификации языка, по существу задает
 правила построения правильных предложений.
\end_layout

\begin_layout Enumerate
Распознающая: за конечное число шагов определяет, принадлежит ли данная
 цепочка данному языку.
 По существу — алгоритм распознавания правильных цепочек языка для дальнейшего
 анализа и трансляции цепочек языка в некоторый код.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Definition
Порождающая грамматика Хомского называется четверка объектов 
\begin_inset Formula $G=(T,N,S,R)$
\end_inset

, где
\end_layout

\begin_layout Definition
\begin_inset Formula $T$
\end_inset

 — термальный словарь, состоящий из терминальных символов (строчные латинские);
\end_layout

\begin_layout Definition
\begin_inset Formula $N$
\end_inset

 — нетерминальный словарь, состоящий из нетерминальных символов (прописные
 латинские);
\end_layout

\begin_layout Definition
\begin_inset Formula $S$
\end_inset

 из 
\begin_inset Formula $N$
\end_inset

 называется начальным символом.
\end_layout

\begin_layout Definition
\begin_inset Formula $R$
\end_inset

 — конечное непустое множество правил вывода (продукций) вида 
\begin_inset Formula $\alpha\to\beta;\ \alpha,\beta$
\end_inset

 из 
\begin_inset Formula $(T\cup N)^{*}$
\end_inset

.
\end_layout

\begin_layout Standard
Классификация грамматик Хомского:
\end_layout

\begin_layout Itemize
Тип 0: не накладывается никаких ограничений.
 Для распознавания необходимо абстрактное устройтво 
\begin_inset Quotes fld
\end_inset

машина Тьюринга
\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Itemize
Тип 1: ограничения: 
\begin_inset Formula $\gamma A\delta\to\gamma\sigma\delta$
\end_inset

; 
\begin_inset Formula $A$
\end_inset

 — нетерминал; грамматики типа 1 называются контекстно-зависимыми — для
 распознавания необходим 
\begin_inset Quotes fld
\end_inset

линейно ограниченный автомат
\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Itemize
Тип 2: правила ограничения: 
\begin_inset Formula $A\to\beta$
\end_inset

, где 
\begin_inset Formula $A$
\end_inset

 — терминал, а 
\begin_inset Formula $\beta$
\end_inset

 — цепочка контекстно-зависимыми грамматика.
 Для распознавания необходим 
\begin_inset Quotes fld
\end_inset

конечный автомат с магазином
\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Itemize
Тип 3: 
\begin_inset Formula $A\to tN|t;\ t$
\end_inset

 терминал; 
\begin_inset Formula $N$
\end_inset

 нетерминал; автоматная (регулярная) грамматика.
 Для распозанавания необходим 
\begin_inset Quotes fld
\end_inset

конечный автомат
\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Itemize
Вложения: 
\begin_inset Formula $T^{3}\subset T^{2}\subset T^{1}\subset T^{0}$
\end_inset

 и 
\begin_inset Formula $L^{3}\subset L^{2}\subset L^{1}\subset L^{0}$
\end_inset

.
\end_layout

\begin_layout Standard
Преобразователи информации.
\end_layout

\begin_layout Standard
В информатике одна из изучаемых проблем — конечное преобразование информации,
 где один набор символов преобразуется в другой.
\end_layout

\begin_layout Definition
Конечный автомат — не функциональный преобразователь.
 Абстрактная машина, в которой есть конечное число состояний и сигналов,
 в зависимости от комбинации которых автомат меняет свое состояние.
\end_layout

\begin_deeper
\begin_layout Definition
(формальное определение детерминированного конечного автомата)
\end_layout

\begin_layout Definition
Детерминированный конечный автомат 
\begin_inset Formula $A$
\end_inset

 представляет собой пятерку компонентов 
\begin_inset Formula $A=(Q,\Sigma,\delta,q_{0},F)$
\end_inset

, где:
\end_layout

\begin_layout Definition
- 
\begin_inset Formula $Q$
\end_inset

 — конечное множество состояний.
\end_layout

\begin_layout Definition
- 
\begin_inset Formula $\Sigma$
\end_inset

 — конечное множество входных символов.
\end_layout

\begin_layout Definition
- 
\begin_inset Formula $\sigma$
\end_inset

 — функция перехода 
\begin_inset Formula $\sigma(q,a)=p$
\end_inset

, где 
\begin_inset Formula $p,q\in Q,\ a\in\Sigma$
\end_inset

.
\end_layout

\begin_layout Definition
- 
\begin_inset Formula $q_{0}$
\end_inset

 — начальное состояние из 
\begin_inset Formula $Q$
\end_inset

.
\end_layout

\begin_layout Definition
- 
\begin_inset Formula $F$
\end_inset

 — множество финальных (завершающих) состояний 
\begin_inset Formula $F\in Q$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Example
ДКА, допускающий битовые цепочки, содержащие подцепочку 
\begin_inset Formula $01$
\end_inset

.
\end_layout

\begin_layout Example

\series bold
Состояния: 
\end_layout

\begin_layout Example
- 
\begin_inset Formula $01$
\end_inset

 не прочитана и либо автомат на предыдущем шаге ничего не читал, либо прочитан
 символ 
\begin_inset Formula $1$
\end_inset

 (состояние 
\begin_inset Formula $q_{0}$
\end_inset

).
\end_layout

\begin_layout Example
- 
\begin_inset Formula $01$
\end_inset

 еще не прочитана, но автомат на предыдущем шаге прочитал 
\begin_inset Formula $0$
\end_inset

 (состояние 
\begin_inset Formula $q_{1}$
\end_inset

 ).
\end_layout

\begin_layout Example
- 
\begin_inset Formula $01$
\end_inset

 прочитана.
\end_layout

\begin_layout Example

\series bold
Функции перехода:
\end_layout

\begin_layout Example
- 
\begin_inset Formula $\delta(q_{0},1)=q_{0}$
\end_inset

; 
\begin_inset Formula $\delta(q_{0},0)=q_{1}$
\end_inset

;
\end_layout

\begin_layout Example
- 
\begin_inset Formula $\delta(q_{1},1)=q_{2}$
\end_inset

; 
\begin_inset Formula $\delta(q_{1},0)=q_{1}$
\end_inset

;
\end_layout

\begin_layout Example
- 
\begin_inset Formula $\delta(q_{2},1)=q_{2}$
\end_inset

; 
\begin_inset Formula $\delta(q_{2},0)=q_{2}$
\end_inset

;
\end_layout

\begin_layout Example
\begin_inset Formula $Q=\{q_{0},q_{1},q_{2}\},\ \Sigma=\{0,1\},\ F=(\text{что-то там})$
\end_inset

.
\end_layout

\begin_layout Standard
Мы можем задать автомат с помощью диаграммы переходов.
\end_layout

\begin_layout Itemize
Всякому состоянию соответствует вершина графа.
\end_layout

\begin_layout Itemize
Для любого перехода ДКА 
\begin_inset Formula $\delta(q,a)=p$
\end_inset

, определяемого его функцией перехода, в графе существует дуга из вершины
 состояния 
\begin_inset Formula $q$
\end_inset

 в вершину состояния 
\begin_inset Formula $p$
\end_inset

 размеченная символом 
\begin_inset Formula $a$
\end_inset

.
\end_layout

\begin_layout Itemize
Существует стрелка в начальное состояни, не выходящая ни из одного состояния.
\end_layout

\begin_layout Itemize
Вершина из множества допускаемых состояний обозначается двойным кружком.
\end_layout

\begin_layout Standard
Или мы можем задать ДКА с помощью таблицы переходов.
\end_layout

\begin_layout Itemize
Таблица переходов представляет собой табличное представление функции перехода
 
\begin_inset Formula $\delta(q,a)$
\end_inset

 (в левом столбце — состояния, в первой строке — символы алфавита).
\end_layout

\begin_layout Definition
Расширенная функция переходов 
\begin_inset Formula $\widehat{\delta}(q,w)$
\end_inset

 ставит в соответствие состоянию 
\begin_inset Formula $q$
\end_inset

 и цепочке 
\begin_inset Formula $w$
\end_inset

 состояние 
\begin_inset Formula $p$
\end_inset

, в которое попадает автомат из состояния 
\begin_inset Formula $q$
\end_inset

, обработав цепочку 
\begin_inset Formula $w$
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Definition
Языком ДКА 
\begin_inset Formula $A=(Q,\Sigma,\delta,q_{0},F)$
\end_inset

 называются цепочки...
 ну блин.
 В жопу такие конспекты
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Definition
Недетерминированный конечный автомат — 
\begin_inset Formula $A(Q,\Sigma,\delta,q_{0},F)$
\end_inset

, где все, кроме 
\begin_inset Formula $\delta$
\end_inset

 имеют те же значения, а 
\begin_inset Formula $\delta$
\end_inset

 —функция, аргументами которой являются состояние из 
\begin_inset Formula $Q$
\end_inset

 и входной символ из 
\begin_inset Formula $\Sigma$
\end_inset

, а значением — подмножество множества 
\begin_inset Formula $Q$
\end_inset

.
 Различие между ДКА и НКА состоит в типе функции 
\begin_inset Formula $\delta$
\end_inset

.
\end_layout

\begin_layout Definition
Может в каждый момент времени может находиться в нескольких состояниях.
\end_layout

\begin_layout Section
Недетерминированный конеченый автомат с 
\begin_inset Formula $\varepsilon$
\end_inset

-переходами
\end_layout

\begin_layout Standard
Составление расширенной функции перехода:
\end_layout

\begin_layout Standard
\begin_inset Formula $\hat{\delta}(q_{0},\varepsilon)=ECLOSE(q_{0})=\{q_{0},q_{1}\}$
\end_inset

;
\end_layout

\begin_layout Standard
\begin_inset Formula $\hat{\delta}(q_{0},5)=ECLOSE(q_{1})\cup ECLOSE(q_{4})=\{q_{1}\}\cup\{q_{4}\}=\{q_{1},q_{4}\}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula $\hat{\delta}(q_{0},5.)=\{q_{2},q_{3}\}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula $\hat{\delta}(q_{0},5.6)=\{q_{3}\}$
\end_inset

.
\end_layout

\begin_layout Standard
Язык: 
\begin_inset Formula $L(E)=\{w|\hat{\delta}(q,w)\cap F\neq0\}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula $\hat{\delta}(q_{0},5+5)$
\end_inset

;
\end_layout

\begin_layout Standard
\begin_inset Formula $\hat{\delta}(q_{0},\varepsilon)=\{q_{0},q_{1}\}$
\end_inset

;
\end_layout

\begin_layout Standard
\begin_inset Formula $\hat{\delta}(q_{0},5)=\{q_{1},q_{4}\}$
\end_inset

;
\end_layout

\begin_layout Standard
\begin_inset Formula $\hat{\delta}(q_{0},5+)=\delta(q_{1},+)\cup\delta(q_{4},+)=\{\varnothing\}$
\end_inset

;
\end_layout

\end_body
\end_document
